/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinica;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alexander
 */
public class Clinica extends javax.swing.JFrame {
    
    
    /*
    
    ESCRIBIR FICHERO BINARIO O DE TEXTO CON LOS DATOS DEL PACIENTE
    
    
    */
    
    

    /**
     * Creates new form Clinica
     */
    private Conexion conn;

    private static final int FECHA = 0;
    private static final int TRATAMIENTO = 1;
    private static final int OBSERVACIONES = 2;
    public static final String[] TRATAMIENTOS = {"Implantología", "Ortodoncia", "Periodoncia", "Estética bucal", "Extracciones"};
    private static final String[] COLS_TABLE = {"FECHA", "TRATAMIENTO", "OBSERVACIONES"};
    private Paciente paciente;
    private ArrayList<Visita> visitas;

    /**
     *
     */
    public Clinica() {
        this.conn = Conexion.getInstance();
        this.visitas = new ArrayList<>();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelLayout = new javax.swing.JPanel();
        jPanel1Consulta = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonInitConsulta = new javax.swing.JButton();
        jButtonCreatePaciente = new javax.swing.JButton();
        jPanelInfo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonInicio = new javax.swing.JButton();
        jButtonVisita = new javax.swing.JButton();
        jLabelNameClient = new javax.swing.JLabel();
        jLabelDniClient = new javax.swing.JLabel();
        jButtonExport = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLabelObervaciones = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanelLayout.setLayout(new java.awt.CardLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("CLINICA DENTAL");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dentista.jpg"))); // NOI18N

        jButtonInitConsulta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonInitConsulta.setText("Inicio Consulta");
        jButtonInitConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInitConsultaActionPerformed(evt);
            }
        });

        jButtonCreatePaciente.setText("Nuevo Paciente");
        jButtonCreatePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreatePacienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1ConsultaLayout = new javax.swing.GroupLayout(jPanel1Consulta);
        jPanel1Consulta.setLayout(jPanel1ConsultaLayout);
        jPanel1ConsultaLayout.setHorizontalGroup(
            jPanel1ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1ConsultaLayout.createSequentialGroup()
                .addGap(359, 359, 359)
                .addComponent(jButtonInitConsulta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addComponent(jButtonCreatePaciente)
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1ConsultaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(298, 298, 298))
            .addGroup(jPanel1ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1ConsultaLayout.createSequentialGroup()
                    .addGap(240, 240, 240)
                    .addComponent(jLabel1)
                    .addContainerGap(241, Short.MAX_VALUE)))
        );
        jPanel1ConsultaLayout.setVerticalGroup(
            jPanel1ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1ConsultaLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 512, Short.MAX_VALUE)
                .addGroup(jPanel1ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1ConsultaLayout.createSequentialGroup()
                        .addComponent(jButtonInitConsulta)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1ConsultaLayout.createSequentialGroup()
                        .addComponent(jButtonCreatePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
            .addGroup(jPanel1ConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1ConsultaLayout.createSequentialGroup()
                    .addGap(77, 77, 77)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(78, Short.MAX_VALUE)))
        );

        jPanelLayout.add(jPanel1Consulta, "card2");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("NOMBRE");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("DNI");

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Tratamiento");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Observaciones");

        jButtonInicio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonInicio.setText("INICIO");
        jButtonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInicioActionPerformed(evt);
            }
        });

        jButtonVisita.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonVisita.setText("INSERTAR VISITA");
        jButtonVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisitaActionPerformed(evt);
            }
        });

        jLabelNameClient.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabelDniClient.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButtonExport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonExport.setText("EXPORTAR A FICHERO");
        jButtonExport.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportActionPerformed(evt);
            }
        });

        jLabelObervaciones.setColumns(20);
        jLabelObervaciones.setRows(5);
        jScrollPane2.setViewportView(jLabelObervaciones);

        javax.swing.GroupLayout jPanelInfoLayout = new javax.swing.GroupLayout(jPanelInfo);
        jPanelInfo.setLayout(jPanelInfoLayout);
        jPanelInfoLayout.setHorizontalGroup(
            jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelInfoLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelNameClient, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelDniClient, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))
                            .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(42, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelInfoLayout.createSequentialGroup()
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButtonVisita, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonInicio)
                        .addGap(41, 41, 41)
                        .addComponent(jButtonExport)))
                .addGap(51, 51, 51))
        );
        jPanelInfoLayout.setVerticalGroup(
            jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInfoLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabelNameClient)
                    .addComponent(jLabelDniClient))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelInfoLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanelInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInicio)
                    .addComponent(jButtonVisita)
                    .addComponent(jButtonExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        jPanelLayout.add(jPanelInfo, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelLayout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInitConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInitConsultaActionPerformed
        // TODO add your handling code here:
        this.visitas = new ArrayList<>(); //SETEAMOS A CERO ELEMENTOS PARA NO CARGAR CON LOS DATOS ANTERIORES
        String dni = JOptionPane.showInputDialog(this.jPanel1Consulta, "Teclee el DNI del paciente", "DNI", JOptionPane.INFORMATION_MESSAGE);

        if (!dni.isEmpty()) {

            getPaciente(dni);

            if (this.paciente != null) {
                this.jPanel1Consulta.setVisible(false);
                this.jPanelInfo.setVisible(true);
                rellenarPanelInfo(this.paciente);
            } else {
                JOptionPane.showMessageDialog(this.jPanel1Consulta, "Paciente no existe", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this.jPanel1Consulta, "DNI vacio", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonInitConsultaActionPerformed

    private void rellenarPanelInfo(Paciente paciente) {
        this.jLabelNameClient.setText(paciente.getNombre());
        this.jLabelDniClient.setText(paciente.getDni());

        //GET VISITAS and BUILD TABLE
        this.getVisitas(paciente.getDni());
        this.buildTable(this.visitas, COLS_TABLE);
        buildObservaciones();

        cargarComboBox();

    }

    private void buildObservaciones() {
        String observaciones;
        int index = this.jTable1.getSelectedRow();
        if (index > -1) {
            observaciones = this.visitas.get(this.jTable1.getSelectedRow()).getObservaciones();
            this.jLabelObervaciones.setText(observaciones);

        }
    }

    private void buildTable(ArrayList<Visita> visitas, String[] cols) {
        //this.jTable1.setModel(new DefaultTableModel());

        Object[][] data = new Object[visitas.size()][cols.length];

        for (int i = 0; i < data.length; i++) {
            data[i][FECHA] = visitas.get(i).getFecha();
            data[i][TRATAMIENTO] = visitas.get(i).getTratamiento();
            data[i][OBSERVACIONES] = visitas.get(i).getObservaciones();
        }

        this.jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.jTable1.setModel(new DefaultTableModel(data, cols));

    }

    private void cargarComboBox() {
        this.jComboBox1.setModel(new DefaultComboBoxModel(TRATAMIENTOS));
        this.jComboBox1.setSelectedIndex(-1);
    }

    private void getPaciente(String dni) {

        PreparedStatement stmt = null;
        ResultSet dataPaciente;
        String nombre, telefono;
        String query = "SELECT * FROM pacientes where dni = ?";
        try {
            stmt = this.conn.getConn().prepareStatement(query);
            stmt.setString(1, dni);
            dataPaciente = stmt.executeQuery();

            while (dataPaciente.next()) {
                nombre = dataPaciente.getString("nombre");
                telefono = dataPaciente.getString("telefono");
                this.paciente = new Paciente(dni, nombre, telefono);
            }

        } catch (SQLException ex) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void getVisitas(String dni) {

        PreparedStatement stmt = null;
        ResultSet data;
        LocalDate fecha;
        String tratamiento;
        String observaciones;
        String query = "SELECT fecha, tratamiento, observaciones FROM visitas WHERE dni = ? ORDER BY fecha DESC";

        try {
            stmt = this.conn.getConn().prepareStatement(query);
            stmt.setString(1, dni);

            data = stmt.executeQuery();

            while (data.next()) {
                fecha = data.getDate("fecha").toLocalDate();
                tratamiento = data.getString("tratamiento");
                observaciones = data.getString("observaciones");

                this.visitas.add(new Visita(fecha, tratamiento, observaciones));
            }

        } catch (SQLException e) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, e);

        }

    }

    private void jButtonVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisitaActionPerformed
        // TODO add your handling code here:
        VisitaNueva visita = new VisitaNueva(this, true);
        visita.setVisible(true);
        visita.setLocationRelativeTo(this.jPanelInfo);
        String msg;
        boolean seCreo;
        String tratamiento;
        String observaciones;
        Visita visitaC;

        if (visita.getIsCreate()) {
            tratamiento = String.valueOf(visita.getjComboBoxTratamiento().getSelectedItem());
            observaciones = visita.getjTextAreaObservaciones().getText();

            visitaC = new Visita(visita.getFecha(), tratamiento, observaciones);
            
            seCreo = this.addVisita(visitaC);

            msg = seCreo ? "Se creo correctamente" : "No pudo ser creado";

            if (seCreo) {
                this.visitas.add(visitaC);
                buildTable(this.visitas, COLS_TABLE); //PINTAMOS YA TABLA
            }
            JOptionPane.showMessageDialog(this, msg, "Alerta", JOptionPane.INFORMATION_MESSAGE);
            
        }


    }//GEN-LAST:event_jButtonVisitaActionPerformed

    private void jButtonInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInicioActionPerformed
        // TODO add your handling code here:
        this.jPanelInfo.setVisible(false);
        this.jPanel1Consulta.setVisible(true);
    }//GEN-LAST:event_jButtonInicioActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        this.jComboBox1.setSelectedItem(this.visitas.get(this.jTable1.getSelectedRow()).getTratamiento());
        this.buildObservaciones();

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonCreatePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreatePacienteActionPerformed
        // TODO add your handling code here:
        
        /*
        COMPROBAR SI EXISTE
        
        */
        
        PacienteNuevo modalNewPaciente = new PacienteNuevo(this, true);
        modalNewPaciente.setVisible(true);
        modalNewPaciente.setLocationRelativeTo(this.jPanel1Consulta);
        String msg = null;

        if (modalNewPaciente.isIsClickCreate()) {
            msg = this.addPaciente(new Paciente(modalNewPaciente.getjTextPaneDNIText(),
                    modalNewPaciente.getjTextPaneNombreText(), modalNewPaciente.getjTextPaneTLFText())) ? "Creado correctamente" : "Error, no se ha podido crear el apciente";

            JOptionPane.showMessageDialog(this, msg, "Alerta", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jButtonCreatePacienteActionPerformed

    private void jButtonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportActionPerformed
        // TODO add your handling code here:
        
        
        
        
        File file = new File(""+this.paciente.getNombre()+".txt");
        
        
        
        BufferedWriter bw = null;
        
        try {
            
            
            if (file.exists()) {
                bw = new BufferedWriter(new FileWriter(file));
            } else {
                bw = new BufferedWriter(new FileWriter(file, true));
            }
            
            
            bw.write("Expediente: " + this.paciente.getNombre() + " ---- DNI: " + this.paciente.getDni());
            bw.write(System.lineSeparator());
            
            
            for (Visita visita: this.visitas) {
                bw.write("Visita --> fecha: " + visita.getFecha().toString() +
                        " tratamiento: " + visita.getTratamiento() + " observaciones: " + visita.getObservaciones() );
                bw.write(System.lineSeparator());
            }
            
        } catch (IOException e) {
        } finally {
            
            if (bw != null) {
                try {
                    bw.close();
                } catch (IOException e) {
                }
            }
            
        }
        
        
        
         
    }//GEN-LAST:event_jButtonExportActionPerformed

    private boolean addPaciente(Paciente paciente) {
        boolean seInserto = true;
        int filasAfectadas;

        PreparedStatement stmt;
        String query = "INSERT INTO pacientes() VALUES (?, ?, ?)";

        try {
            stmt = this.conn.getConn().prepareStatement(query);
            stmt.setString(1, paciente.getDni());
            stmt.setString(2, paciente.getNombre());
            stmt.setString(3, paciente.getTelefono());

            filasAfectadas = stmt.executeUpdate();
            seInserto = filasAfectadas == 1;

        } catch (SQLException e) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, e);

            seInserto = false;
        }

        return seInserto;

    }

    private boolean addVisita(Visita visita) {
        boolean seInserto = true;
        int filasAfectadas;
        PreparedStatement stmt;
        String query = "INSERT INTO visitas(dni, fecha, tratamiento, observaciones) VALUES (?, ?, ?, ?)";

        try {
            stmt = this.conn.getConn().prepareStatement(query);
            stmt.setString(1, this.paciente.getDni());
            stmt.setObject(2, visita.getFecha());
            stmt.setString(3, visita.getTratamiento());
            stmt.setString(4, visita.getObservaciones());

            filasAfectadas = stmt.executeUpdate();
            seInserto = filasAfectadas == 1;

        } catch (SQLException e) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, e);

            seInserto = false;
        }

        return seInserto;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Clinica().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreatePaciente;
    private javax.swing.JButton jButtonExport;
    private javax.swing.JButton jButtonInicio;
    private javax.swing.JButton jButtonInitConsulta;
    private javax.swing.JButton jButtonVisita;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelDniClient;
    private javax.swing.JLabel jLabelNameClient;
    private javax.swing.JTextArea jLabelObervaciones;
    private javax.swing.JPanel jPanel1Consulta;
    private javax.swing.JPanel jPanelInfo;
    private javax.swing.JPanel jPanelLayout;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
